{
  "_from": "opencv4nodejs@2",
  "_id": "opencv4nodejs@2.38.0",
  "_inBundle": false,
  "_integrity": "sha512-+MxGxYUjVVbsUEAcs14ztSwC1wdt2Tu5KKOM86KnadaifepG76VprmQpW9zdcWyXINSa58Q4j+G65mYIiwGM4Q==",
  "_location": "/opencv4nodejs",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "opencv4nodejs@2",
    "name": "opencv4nodejs",
    "escapedName": "opencv4nodejs",
    "rawSpec": "2",
    "saveSpec": null,
    "fetchSpec": "2"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/opencv4nodejs/-/opencv4nodejs-2.38.0.tgz",
  "_shasum": "c398da62a1930a3f0663505eecd20f80477f906e",
  "_spec": "opencv4nodejs@2",
  "_where": "/Users/glencoakley/dev/drc/wksp/lrc/svrls-testing",
  "author": {
    "name": "justadudewhohacks"
  },
  "bugs": {
    "url": "https://github.com/justadudewhohacks/opencv4nodejs/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "macro-inferno": "^0.2.1",
    "nan": "^2.7.0"
  },
  "deprecated": false,
  "description": "Asynchronous OpenCV 3.x API for node.js",
  "gypfile": true,
  "homepage": "https://github.com/justadudewhohacks/opencv4nodejs#readme",
  "keywords": [
    "opencv",
    "cv",
    "computer vision",
    "detection",
    "recognition",
    "face",
    "gesture",
    "machine",
    "learning",
    "neural",
    "network",
    "async"
  ],
  "license": "MIT",
  "main": "./lib/opencv4nodejs.js",
  "name": "opencv4nodejs",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/justadudewhohacks/opencv4nodejs.git"
  },
  "scripts": {
    "build": "node-gyp configure build",
    "build-debug": "node-gyp rebuild --debug",
    "build-opencv3.0": "docker build -t opencv3.0 -f ./ci/opencv3.0/Dockerfile . &&docker run opencv3.0",
    "build-opencv3.0-contrib": "docker build -t opencv3.0-contrib -f ./ci/opencv3.0-contrib/Dockerfile . &&docker run opencv3.0-contrib",
    "build-opencv3.1": "docker build -t opencv3.1 -f ./ci/opencv3.1/Dockerfile . &&docker run opencv3.1",
    "build-opencv3.1-contrib": "docker build -t opencv3.1-contrib -f ./ci/opencv3.1-contrib/Dockerfile . &&docker run opencv3.1-contrib",
    "build-opencv3.2-contrib": "docker build -t opencv3.2-contrib -f ./ci/opencv3.2-contrib/Dockerfile . &&docker run opencv3.2-contrib",
    "build-opencv3.2-contrib-with-coverage": "docker build -t opencv3.2-contrib-with-coverage -f ./ci/opencv3.2-contrib-with-coverage/Dockerfile . &&docker run -v $PWD/ci/coverage-report:/test/coverage-report opencv3.2-contrib-with-coverage",
    "build-opencv3.3": "docker build -t opencv3.3 -f ./ci/opencv3.3/Dockerfile . &&docker run opencv3.3",
    "build-opencv3.3-contrib": "docker build -t opencv3.3-contrib -f ./ci/opencv3.3-contrib/Dockerfile . &&docker run opencv3.3-contrib",
    "build-opencv3.3.1": "docker build -t opencv3.3.1 -f ./ci/opencv3.3.1/Dockerfile . &&docker run opencv3.3.1",
    "build-opencv3.3.1-contrib": "docker build -t opencv3.3.1-contrib -f ./ci/opencv3.3.1-contrib/Dockerfile . &&docker run opencv3.3.1-contrib",
    "clean": "node-gyp clean",
    "configure": "node-gyp configure",
    "install": "node-gyp rebuild",
    "rebuild": "node-gyp rebuild"
  },
  "version": "2.38.0"
}
